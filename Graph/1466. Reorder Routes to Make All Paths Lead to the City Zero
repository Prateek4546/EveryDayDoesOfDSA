class Solution {
    public int minReorder(int n, int[][] connections) {
        ArrayList<ArrayList<Integer>> al = new ArrayList<>();
        for(int i=0; i<n; i++){
            al.add(new ArrayList<>());
        }
        for(int i=0; i<connections.length; i++){
            int u = connections[i][0];
            int v = connections[i][1];
            al.get(u).add(v);
            al.get(v).add(-u);
        }
        int[] visted = new int[n];
        Queue<Integer> q = new LinkedList<Integer>();
        q.add(0);
        int ans = 0;
        visted[0] = 1;
        while(!q.isEmpty()){
            int node = q.peek();
            q.remove();
            for(Integer i :al.get(Math.abs(node))){
                int num = Math.abs(i);
                if(visted[num] == 0){
                    visted[num] = 1;
                    q.add(num);
                   if(i > 0)ans++;
                }
            }
        }
        return ans;
    }
}
