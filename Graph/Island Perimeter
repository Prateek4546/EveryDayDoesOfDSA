class Solution {
    public int islandPerimeter(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;

        int ans = 0;
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
              if(grid[i][j] == 1){
                   ans += ( 4 - countofN(i , j , n , m , grid));
              }
            }
        }
        return ans; 
    }
    public static int countofN(int i , int j , int R , int C , int[][] mat){
       int count = 0;
        if (i > 0 && mat[i - 1][j] == 1)
            count++;
     
        // LEFT
        if (j > 0 && mat[i][j - 1] == 1)
            count++;
     
        // DOWN
        if (i < R - 1 && mat[i + 1][j] == 1)
            count++;
     
      
        if (j < C - 1 && mat[i][j + 1] == 1)
            count++;
            return count;
    }
}
